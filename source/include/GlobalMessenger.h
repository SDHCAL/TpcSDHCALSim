  /// \file GlobalMessenger.h
/*
 *
 * GlobalMessenger.h header template automatically generated by a class generator
 * Creation date : mar. juil. 8 2014
 *
 * This file is part of TpcSDHCALSim libraries.
 * 
 * TpcSDHCALSim is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * TpcSDHCALSim is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with TpcSDHCALSim.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef GLOBALMESSENGER_H
#define GLOBALMESSENGER_H

#include "G4UImessenger.hh"

class G4UIcommand;
class G4UIcmdWithADoubleAndUnit;
class G4UIcmdWith3VectorAndUnit;
class G4UIcmdWithAString;

namespace tpc_sdhcal
{

class DetectorConstruction;
class EventAction;
class RunAction;
class TrackingAction;

/** 
 * @brief GlobalMessenger class
 */ 
class GlobalMessenger : public G4UImessenger 
{
 public:
 /**
  * @brief Ctor
  */
 GlobalMessenger();

 /**
  * @brief Dtor 
  */
 virtual ~GlobalMessenger();

 // from G4UImessenger
 virtual G4String 	GetCurrentValue(G4UIcommand *command);
 virtual void SetNewValue(G4UIcommand *command, G4String newValue);

 // user's plug-ins
 void SetDetectorConstruction(DetectorConstruction *pDetectorConstruction);
 void SetEventAction(EventAction *pEventAction);
 void SetRunAction(RunAction *pRunAction);
 void SetTrackingAction(TrackingAction *pTrackingAction);

protected:

 // user's plug-ins
 DetectorConstruction       *m_pDetectorConstruction;
 EventAction                *m_pEventAction;
 RunAction                  *m_pRunAction;
 TrackingAction             *m_pTrackingAction;

 // cmds
 G4UIcmdWithADoubleAndUnit     *m_pTargetThicknessCmd;
 G4UIcmdWithADoubleAndUnit     *m_pDistanceToCalorimeterCmd;
 G4UIcmdWith3VectorAndUnit     *m_pBFieldCmd;
 G4UIcmdWithAString             *m_pRootFileNameCmd;
};

inline void GlobalMessenger::SetDetectorConstruction(DetectorConstruction *pDetectorConstruction)
{
	m_pDetectorConstruction = pDetectorConstruction;
}

inline void GlobalMessenger::SetEventAction(EventAction *pEventAction)
{
	m_pEventAction = pEventAction;
}

inline void GlobalMessenger::SetRunAction(RunAction *pRunAction)
{
	m_pRunAction = pRunAction;
}

inline void GlobalMessenger::SetTrackingAction(TrackingAction *pTrackingAction)
{
	m_pTrackingAction = pTrackingAction;
}

} 

#endif  //  GLOBALMESSENGER_H
